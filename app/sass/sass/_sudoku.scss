// Variables
$width: 316px;
//$width: 500px;
$border-width: 1px;
$font-size: $width / 9 * 0.55;

$color-primary: #2C506E;
$color-secondar: #747690;
$color-light: darken(white, 10%);
$color-error: #812500;

// Reset
body, div, li, ul {
    margin: 0;
    padding: 0;
}

// Mixins
@mixin btn($bg-color, $color: black) {
    background: linear-gradient(lighten($bg-color, 20%), darken($bg-color, 20%));    
    border: solid $border-width  $bg-color;
    border-radius: 3px;
    color: $color;
}

@mixin rectangle($rectangle-width, $rectangle-height, $float: left) {
    float: $float;    
    font-size: $font-size;
    height: $rectangle-height;
    line-height: $rectangle-height;
    list-style-type: none;
    text-align: center;
    width: $rectangle-width;
}

@mixin button($button-width, $button-height, $bg-color, $color: black, $float: left) {
    @include rectangle($button-width, $button-height, $float);
    @include btn($bg-color, $color);
}

// Styling
body {
    background-color: black;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;    
    margin-top: $width / 9;
    margin-left: auto;
    margin-right: auto;
    width: $width;
    
    .menu {
        // $border-width * 3 creates a little space betwen the buttons
        $button-width: $width * 1.5 / 9 - $border-width * 3;
        $button-color: $color-primary;
        $height: $width / 9 * 0.8;
        
        color: $color-light;
        width: $width;
        height: $width / 9;
        
        .brand {
            @include rectangle($width * 2 / 9, $height);
            text-align: left;
        }
        .errors {
            @include rectangle($width * 1 / 9, $height);
            font-size: $font-size * 0.65;
        }
        .clock {
            @include rectangle($width * 3 / 9, $height);
            font-size: $font-size * 0.65;
        }
        .help {
            @include button($button-width, $height, $button-color, $color-light);
            font-size: $font-size * 0.65;
        }
        .new {
            @include button($button-width, $height, $button-color, $color-light, right);
            font-size: $font-size * 0.65;
        }
    }    

    .sudoku {
        // background-image: url("../images/grid.jpg");
        background-color: $color-light;
        background-size: $width $width;
        width: $width;
        height: $width;

        .square {
            $square-width: $width / 9;
            $note-width: $square-width / 3;
            
            @include rectangle($square-width, $square-width);

            .notes {
                line-height: $note-width;
                padding-top: 3px;

                .note {
                    @include rectangle($note-width, note-width);
                    font-size: $note-width;
                    font-weight: bold;
                }
            }
        }
        
        .error {
            $color-error: $color-error;
            background: linear-gradient(lighten($color-error, 20%), darken($color-error, 20%));                
        }

    }

    .controllers {
        $button-color: $color-secondar;
        $margin-right: 2px;
        $button-width: ($width - $border-width * 20 - $margin-right * 9) / 10;

        width: $width;
        height: $width / 9;
        margin-top: $width / 9 - $button-width;
        
        .number {
            @include button($button-width, $button-width, $button-color);            
            margin-right: $margin-right;
        }

        .selected-number {
            @include button($button-width, $button-width, $color-primary, $color-light);
        }

        .selector-V {
            @include button($button-width, $button-width, $button-color, black, right);            
        }

        .selector-N {
            @include button($button-width, $button-width, $color-primary, $color-light, right);
        }        
    }    
}

.loader {
    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -23px;
    margin-left: -23px;
    z-index: 1000;
    width: 46px;
    height: 46px;
    background: url('../img/ajax-loader.gif') no-repeat;
    cursor: wait;
}

.container {
    display: none;
    width: $width;
    transition: width 2s;
    -moz-transition: width 2s, -moz-transform 2s;
    /* Firefox 4 */

    -webkit-transition: width 2s, -webkit-transform 2s;
    /* Safari and Chrome */

    -o-transition: width 2s, -o-transform 2s;
    /* Opera */

}

.container-solved {
    width: $width;
    transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    /* Firefox 4 */

    -webkit-transform: rotate(360deg);
    /* Safari and Chrome */

    -o-transform: rotate(360deg);
    /* Opera */

}



/* For 321px or more */
/* @media screen and (min-width: 500px) { */
/*     body { */
/*         margin: 50px; */
/*         padding: 0; */
/*         font-size: $font-size-wide;         */
/*     } */
/*     .sudoku { */
/*         margin: 20px auto; */
/*         width: 460px; */
/*     } */
/*     .square { */
/*         width: 45px; */
/*         height: 45px; */
/*         padding: 1px; */
/*     } */
/*     .number { */
/*         width: 45px; */
/*         height: 45px; */
/*         padding: 1px; */
/*     }     */
/* } */
/* iPhone 4 ----------- */
/* @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) { */

/* } */
